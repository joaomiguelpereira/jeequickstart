<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.jpereira.enterprise</groupId>
	<artifactId>parent-pom</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>parent-pom</name>



	<!-- Properties for the project. Will be inherited to all modules -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- The version of Weld extensions in use -->
		<weld.extensions.version>1.0.0-CR2</weld.extensions.version>
		<!-- The final name of the application -->
		<application.finalName>enterprise-application</application.finalName>
		<application.displayName>Enterprise Application</application.displayName>
		<application.web.contextRoot>/eApplication</application.web.contextRoot>




	</properties>


	<!-- Artifact Repositories in use for the project -->
	<repositories>
		<repository>
			<id>glassfish</id>
			<name>GlassFish Maven 2 Repository</name>
			<url>http://maven.glassfish.org/</url>
		</repository>

		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<!-- Plugin Repositories in use for the projec -->
	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>

		<pluginRepository>
			<id>glassfish</id>
			<name>GlassFish Maven 2 Repository</name>
			<url>http://download.java.net/maven/glassfish</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- Dependency Management -->
	<dependencyManagement>
		<dependencies>
			<!-- Scope Test dependencies -->
			<dependency>
				<!-- needs extra dependencies: objenesis & hamcrest -->
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.0-rc1</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.9</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>1.8.0.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>3.6.4.Final</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!--Scope Provided Dependencies -->
			<!-- Needed on JBoss AS as EL is out of date -->
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>el-impl</artifactId>
				<scope>runtime</scope>
				<!-- FIXME this version should be in the Weld API BOM -->
				<version>2.1.2-b04</version>
				<exclusions>
					<exclusion>
						<groupId>javax.el</groupId>
						<artifactId>el-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- JEE API -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>6.0</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Hibernate Validator -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.0.0.GA</version>
				<scope>provided</scope>
			</dependency>

			<!-- Import scope will provide versions for dependencies below. -->
			<!-- Weld expensions -->
			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-extensions-bom</artifactId>
				<version>${weld.extensions.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Test Dependencies common to all modules -->
		<!-- Scope Test dependencies -->
		<dependency>
			<!-- needs extra dependencies: objenesis & hamcrest -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.7</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>jta</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<!-- Configure Build Process -->
	<build>
		<plugins>
			<!-- Compiler plugin to use Java 1.6 compatiblity -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Eclipse plugin to force download of source and JavaDoc jars -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
		</plugins>



	</build>



	<profiles>
		<!-- Profile for unit testing -->
		<!-- Thanks to: http://blogger.johndobie.net/2011/06/seperating-maven-unit-integration-tests.html -->
		<!-- Also to: http://stackoverflow.com/questions/1625492/execute-maven-plugin-goal-on-child-modules-but-not-on-parent -->
		<profile>
			<id>it</id>

			<build>
				<pluginManagement>

					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<executions>
								<execution>

									<id>create-directory</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>run</goal>
									</goals>

									<configuration>
										<tasks>
											<echo message="Creating Directory ${integrationOutputDirectory}" />
											<mkdir dir="${integrationOutputDirectory}" />
										</tasks>

									</configuration>

								</execution>
							</executions>
						</plugin>



						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>build-helper-maven-plugin</artifactId>
							<version>1.5</version>
							<executions>
								<execution>
									<id>add-test-sources</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>add-test-source</goal>
									</goals>
									<configuration>
										<sources>
											<source>${integrationSourceDirectory}/java</source>
										</sources>
									</configuration>
								</execution>
								<execution>
									<id>add-test-resources</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>add-test-resource</goal>
									</goals>
									<configuration>
										<resources>
											<resource>
												<directory>${integrationSourceDirectory}/java</directory>
												<targetPath>${integrationOutputDirectory}</targetPath>
											</resource>
										</resources>
									</configuration>
								</execution>
								<execution>
									<id>add-empty-directory</id>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>add-test-resource</goal>
									</goals>
									<configuration>
										<resources>
											<resource>
												<directory>${integrationSourceDirectory}/java</directory>
												<targetPath>${integrationOutputDirectory}</targetPath>
												<excludes>
													<exclude>**/*</exclude>
												</excludes>
											</resource>
										</resources>
									</configuration>
								</execution>
							</executions>
						</plugin>













						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>2.3.2</version>
							<executions>
								<execution>
									<phase>pre-integration-test</phase>
									<goals>
										<goal>testCompile</goal>
									</goals>
									<configuration>
										<compilerArguments>
											<d>${integrationOutputDirectory}</d>
										</compilerArguments>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>2.8</version>
							<configuration>
								<testClassesDirectory>${integrationOutputDirectory}</testClassesDirectory>
								<reportsDirectory>${integrationOutputDirectory}/failsafe-reports</reportsDirectory>
								<test>**/*.java</test>
								<additionalClasspathElements>
									<additionalClasspathElement>${integrationSourceDirectory}/resources</additionalClasspathElement>
								</additionalClasspathElements>
							</configuration>
							<executions>
								<execution>
									<goals>
										<goal>integration-test</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
